[[plugins]]
repo = 'neovim/nvim-lspconfig'
lua_source = '''
local lspconfig = require('lspconfig')

vim.keymap.set('n', '<C-l>m', vim.diagnostic.open_float)
vim.keymap.set('n', '<C-l><C-p>', vim.diagnostic.goto_prev)
vim.keymap.set('n', '<C-l><C-n>', vim.diagnostic.goto_next)
vim.keymap.set('n', '<C-l>l', vim.diagnostic.setloclist)

vim.api.nvim_create_autocmd('LspAttach', {
  group = vim.api.nvim_create_augroup('UserLspConfig', {}),
  callback = function(ev)
    vim.bo[ev.buf].omnifunc = 'v:lua.vim.lsp.omnifunc'

    local opts = { buffer = ev.buf }
    vim.keymap.set('n', '<C-l>J', vim.lsp.buf.declaration, opts)
    vim.keymap.set('n', '<C-l>j', vim.lsp.buf.definition, opts)
    vim.keymap.set('n', '<C-l>h', vim.lsp.buf.hover, opts)
    vim.keymap.set('n', '<C-l>i', vim.lsp.buf.implementation, opts)
    vim.keymap.set('n', '<C-l>s', vim.lsp.buf.signature_help, opts)
    vim.keymap.set('n', '<C-l>w+', vim.lsp.buf.add_workspace_folder, opts)
    vim.keymap.set('n', '<C-l>w-', vim.lsp.buf.remove_workspace_folder, opts)
    vim.keymap.set('n', '<C-l>wl', function()
      print(vim.inspect(vim.lsp.buf.list_workspace_folders()))
    end, opts)
    vim.keymap.set('n', '<C-l>d', vim.lsp.buf.type_definition, opts)
    vim.keymap.set('n', '<C-l>n', vim.lsp.buf.rename, opts)
    vim.keymap.set({ 'n', 'v' }, '<C-l>a', vim.lsp.buf.code_action, opts)
    vim.keymap.set('n', '<C-l>r', vim.lsp.buf.references, opts)
    vim.keymap.set('n', '<C-l>f', function()
      vim.lsp.buf.format { async = true }
    end, opts)
  end,
})
'''

[[plugins]]
repo = 'williamboman/mason.nvim'
depends = 'nvim-lspconfig'
on_event = 'BufRead'
lua_source = '''
require('mason').setup({
  ui = {
      icons = {
        package_installed = "✓",
        package_pending = "➜",
        package_uninstalled = "✗"
      }
    }
})
'''

[[plugins]]
repo =  'williamboman/mason-lspconfig.nvim'
on_source = 'nvim-lspconfig'
lua_source = '''
require('mason-lspconfig').setup_handlers({
  function(server_name)
    require('lspconfig')[server_name].setup{}
  end
})
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
